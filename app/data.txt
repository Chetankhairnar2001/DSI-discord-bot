server name = 'AI Camp'

# Get Class Info
`/class info <class name>`
- class name will autofill based on all currently active classes
- used to get a quick summary of the selected class

# Set Project
`/class set-project <class name> <project link>`
- Will set the project link (should be a link to a github repo or something)

# Set Demo
`/class set-demo <class name> <demo link>`
- Will set the team demo link (should be a link to a youtube video or something)

# Set Zoom
`/class set-zoom <class name> <zoom link>`
- Will set the zoom link for the current class, which will be sent each time class starts/resumes

# Set Repo
`/class set-repo <class name> <repo link>`
- Will set the repo link for the current class, which should just be a link to the github repo

# Certificate Generation
At the end of a batch, you will need to use the following command to generate camp certificates.
`/class generate-certificates <class name>`
An input box will appear, prompting you to enter a description of your project.
Enter a sentence-long description of your project and the bot will automatically handle sending students course certificates. **You must do this at the end of each batch.**

# Set Spec
`/class set-spec <class name> <spec link>`
- Will set the spec link for the current class, which should be a notion link pointing to the product spec for the class# `/class set-spec <class name> <spec link>`
- Will set the spec link for the current class, which should be a notion link pointing to the product spec for the class

# Mark Absent
If a student is absent you can use the command
`/class mark-absent <class name>`
A selection menu will appear like shown
![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7276b042-31ef-49be-b3f1-0b09bc77e840/Untitled.png)
Choose the student that is absent and they will be automatically handled according to the # of absences:

| # Absences | Action |
| --- | --- |
| 1 | Email to Student and Parents |
| 2 | Text to Student and Parents |
| 3 | Flagged for removal from course |
# Give a Kudo
Kudos is an internal system we use to recognize team members for going above and beyond.
To give a kudo to a team member, In the `#kudos` channel, use the following command:
`/kudo give <team-member> <reason>`
The bot will reply with a confirmation message.